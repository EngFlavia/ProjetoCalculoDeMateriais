package Views;

import com.itextpdf.kernel.geom.PageSize;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import dao.interfaces.IMateriaisCalculadoDAO;
import dao.interfaces.IMateriaisDAO;
import dao.interfaces.IObjetosDAO;
import dao.interfaces.IRecortesDAO;
import dao.interfaces.IRelatoriosDAO;
import dao.mysql.MateriaisCalculadoDAO;
import dao.mysql.MateriaisDAO;
import dao.mysql.ObjetoDAO;
import dao.mysql.RecortesDAO;
import dao.mysql.RelatoriosDao;
import java.io.FileNotFoundException;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import models.Material;
import models.MaterialCalculado;
import models.Objeto;
import models.Recorte;
import models.TabelaBase;

public class TelaObjeto extends javax.swing.JDialog {
    private IObjetosDAO objetosDao = null;    
    private IRecortesDAO recortesDao = null;
    private IMateriaisDAO materiaisDao = null;
    private IMateriaisCalculadoDAO materiaisCalculadoDao = null;
    private IRelatoriosDAO relatoriosDao = null;
        
    private Objeto objetoCorrente = null;
    
    private int idAmbiente = 0;
    private int idObjeto = 0;
    private int idRecorteSelecionado = 0;
    private int idMaterialCalculadoSelecionado = 0;

    public TelaObjeto(java.awt.Frame parent, boolean modal, int idAmbiente, int idObjeto) {
        super(parent, modal);
        initComponents();
        
        this.objetoCorrente = new Objeto();
        
        btnCadastroRecorte.setVisible(false);
        btnInserirMaterial.setVisible(false);
        
        setIdAmbiente(idAmbiente);
        setIdObjeto(idObjeto);
        
        objetosDao = new ObjetoDAO(); 
        recortesDao = new RecortesDAO();
        materiaisDao = new MateriaisDAO(); 
        relatoriosDao = new RelatoriosDao();
        materiaisCalculadoDao = new MateriaisCalculadoDAO();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtLargura = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAltura = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        btnCadastroRecorte = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaMaterialCalculado = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();
        lblAmbiente = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboMaterial = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        scrTabela = new javax.swing.JScrollPane();
        tabelaRecorte = new javax.swing.JTable();
        btnInserirMaterial = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Descrição");

        txtLargura.setText("0");

        jLabel2.setText("Largura");

        jLabel3.setText("Altura");

        txtAltura.setText("0");

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCadastroRecorte.setText("Cadastro Recorte");
        btnCadastroRecorte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastroRecorteActionPerformed(evt);
            }
        });

        tabelaMaterialCalculado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabelaMaterialCalculado);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblAmbiente.setText("Cadastro de Objeto");

        jLabel4.setText("Recorte");

        comboMaterial.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboMaterialItemStateChanged(evt);
            }
        });

        jLabel5.setText("Material");

        tabelaRecorte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelaRecorte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaRecorteMouseClicked(evt);
            }
        });
        scrTabela.setViewportView(tabelaRecorte);

        btnInserirMaterial.setLabel("Inserir");
        btnInserirMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirMaterialActionPerformed(evt);
            }
        });

        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        jLabel8.setText("Objeto de Cálculo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(scrTabela, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtDescricao, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtLargura, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(txtAltura, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCadastroRecorte))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(comboMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnInserirMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(8, 8, 8)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblAmbiente)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAmbiente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLargura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnCadastroRecorte))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInserirMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprimir)
                    .addComponent(btnSalvar)
                    .addComponent(btnCancelar))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(532, 647));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
        
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        SalvarObjeto();

        JOptionPane.showMessageDialog(this, "Salvo com sucesso!");

        dispose();
    }//GEN-LAST:event_btnSalvarActionPerformed
        
    private void btnCadastroRecorteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastroRecorteActionPerformed
        CadastrarRecorte();      
    }//GEN-LAST:event_btnCadastroRecorteActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void comboMaterialItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboMaterialItemStateChanged
        Material mat = (Material) comboMaterial.getSelectedItem();
    }//GEN-LAST:event_comboMaterialItemStateChanged

    private void tabelaRecorteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaRecorteMouseClicked
        JTable tabela = (JTable) evt.getSource();
        int row = tabela.rowAtPoint(evt.getPoint());        

        String idRecorteSelecionado = tabela.getModel().getValueAt(row, 0) + "";
        setIdRecorteSelecionado(Integer.parseInt(idRecorteSelecionado));        
    }//GEN-LAST:event_tabelaRecorteMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        CarregarObjeto();
    }//GEN-LAST:event_formWindowOpened
   
    private void btnInserirMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirMaterialActionPerformed
        InserirMaterial();        
    }//GEN-LAST:event_btnInserirMaterialActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        Imprimir();
    }//GEN-LAST:event_btnImprimirActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaObjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaObjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaObjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaObjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaObjeto dialog = new TelaObjeto(new javax.swing.JFrame(), true, 0, 0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastroRecorte;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnInserirMaterial;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<models.Material> comboMaterial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAmbiente;
    private javax.swing.JScrollPane scrTabela;
    private javax.swing.JTable tabelaMaterialCalculado;
    private javax.swing.JTable tabelaRecorte;
    private javax.swing.JTextField txtAltura;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtLargura;
    // End of variables declaration//GEN-END:variables

    private int getIdObjeto() {
        return idObjeto;
    }
    
    private void setIdObjeto(int idObjeto) {
        this.idObjeto = idObjeto;
    }
    
    private int getIdAmbiente() {
        return idAmbiente;
    }

    private void setIdAmbiente(int idAmbiente) {
        this.idAmbiente = idAmbiente;
    }

    private int getIdRecorteSelecionado() {
        return idRecorteSelecionado;
    }

    private void setIdRecorteSelecionado(int idRecorteSelecionado) {
        this.idRecorteSelecionado = idRecorteSelecionado;
    }

    private int getIdMaterialCalculadoSelecionado() {
        return idMaterialCalculadoSelecionado;
    }

    private void setIdMaterialCalculadoSelecionado(int idMaterialCalculadoSelecionado) {
        this.idMaterialCalculadoSelecionado = idMaterialCalculadoSelecionado;
    }
    
    private void SalvarObjeto() {
        this.objetoCorrente.setDescricao(txtDescricao.getText());
        this.objetoCorrente.setAltura(Float.parseFloat(txtAltura.getText()));
        this.objetoCorrente.setLargura(Float.parseFloat(txtLargura.getText()));
        this.objetoCorrente.setIdAmbiente(getIdAmbiente());
               
        objetosDao.Salvar(this.objetoCorrente);    
        
        AtualizarMateriaisCalculados();
    }

    private void CarregarObjeto() {
        if(getIdObjeto() > 0) {
            this.objetoCorrente = objetosDao.SelecionarPorId(getIdObjeto());
            
            txtDescricao.setText(this.objetoCorrente.getDescricao());
            txtAltura.setText(Float.toString(this.objetoCorrente.getAltura()));
            txtLargura.setText(Float.toString(this.objetoCorrente.getLargura()));
            
            btnCadastroRecorte.setVisible(true);
            btnInserirMaterial.setVisible(true);
        }
        AtualizaComboboxMaterial();
        AtualizaTabelaRecorte();
        AtualizaTabelaCalculo(); 
    }
        
    private void AtualizaComboboxMaterial() {
        ArrayList<Material> objeto = materiaisDao.Selecionar();
        comboMaterial.setModel(new DefaultComboBoxModel<Material>(objeto.toArray(new Material[objeto.size()])));
    }
    
    private void AtualizaTabelaRecorte() {       
        if(getIdObjeto() > 0) {        
            ResultSet tbl = recortesDao.SelecionarTabelaPorIdObjeto(getIdObjeto());

            TabelaBase tabela = new TabelaBase(tbl);

            tabelaRecorte.setModel(new DefaultTableModel(tabela.ObterDados(), tabela.ObterColuna()));            
            tabelaRecorte.getColumnModel().getColumn(0).setHeaderValue("Código Objeto");
            tabelaRecorte.getColumnModel().getColumn(1).setHeaderValue("Nome Objeto");
            tabelaRecorte.getColumnModel().getColumn(2).setHeaderValue("Altura");
            tabelaRecorte.getColumnModel().getColumn(3).setHeaderValue("Largura");      
        }
    }

    public void AtualizaTabelaCalculo() {    
        if(getIdObjeto() > 0) {   
            ResultSet tbl = materiaisCalculadoDao.SelecionarTabelaPorIdObjeto(getIdObjeto());

            TabelaBase tabela = new TabelaBase(tbl);
            
            tabelaMaterialCalculado.setModel(new DefaultTableModel(tabela.ObterDados(), tabela.ObterColuna()));
            tabelaMaterialCalculado.getColumnModel().getColumn(0).setHeaderValue("Código Objeto");
            tabelaMaterialCalculado.getColumnModel().getColumn(1).setHeaderValue("Quantidade");
            tabelaMaterialCalculado.getColumnModel().getColumn(2).setHeaderValue("Material");
            tabelaMaterialCalculado.getColumnModel().getColumn(3).setHeaderValue("Obj");
            tabelaMaterialCalculado.getColumnModel().getColumn(4).setHeaderValue("Rendimento");                   
        }
    }       
        
    private void CadastrarRecorte(){
        TelaCadastroRecorte telaCadastroRecorte = new TelaCadastroRecorte(null, true, getIdObjeto());
        telaCadastroRecorte.setVisible(true);
                
        AtualizaTabelaRecorte();  
    }
    
    private void InserirMaterial(){                        
        float areaUtil = ObterAreaUtil();
        Material material = (Material) comboMaterial.getSelectedItem();            
        int quantidadeDeMao = 1;
                
        MaterialCalculado materialCalculado = new MaterialCalculado(material, areaUtil, quantidadeDeMao, getIdObjeto());
        materiaisCalculadoDao.Salvar(materialCalculado);
        
        JOptionPane.showMessageDialog(this, "Material calculado com sucesso!");

        AtualizaTabelaCalculo();
    }
    
    private void AtualizarMateriaisCalculados() {
        if(getIdObjeto() > 0)
        {
            float areaUltil = ObterAreaUtil();
            ArrayList<MaterialCalculado> materiaisCalculado = materiaisCalculadoDao.SelecionarPorIdObjeto(getIdObjeto());
            for(MaterialCalculado materialCalculado : materiaisCalculado){
                Material material = materiaisDao.SelecionarPorId(materialCalculado.getIdMaterial());
                
                materialCalculado.Calcular(material, areaUltil, 1);
                
                materiaisCalculadoDao.Salvar(materialCalculado);
            }
            
        }    
    }
    
    private float ObterAreaUtil(){
        ArrayList<Recorte> recortes = recortesDao.SelecionarPorIdObjeto(getIdObjeto());
        float areaUtil = this.objetoCorrente.GetAreaUtil(recortes);
        if(areaUtil <= 0){
            JOptionPane.showMessageDialog(this, "Deve-se cadastar a altura e largura!");
            return 0;
        }
        
        return areaUtil;
    }
    
    private void Imprimir(){
         // Buscando pasta para salvar o PDF
        String path = "";
        JFileChooser j = new JFileChooser();
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        j.showSaveDialog(this);
        path = j.getSelectedFile().getPath();

        try {
            //Gerando documento pdf
            PdfWriter writer = new PdfWriter(path + "/Listagem.pdf");
            PdfDocument pdf = new PdfDocument(writer);
            pdf.setTagged();
            pdf.setDefaultPageSize(PageSize.A4);
            Document doc = new Document(pdf);

            //Criando cabeçalho
            Paragraph titulo = new Paragraph("Lista de Materiais/Orçamento");
            titulo.setBold();
            titulo.setFontSize(15);
            titulo.setTextAlignment(TextAlignment.CENTER);
            doc.add(titulo);

            //Criando a tabela
            Table tbl = new Table(5).useAllAvailableWidth();
            tbl.addCell("Ambiente");
            tbl.addCell("Objeto");
            tbl.addCell("Material");
            tbl.addCell("CustoTotal");
            tbl.addCell("CustoMetro2");
            
            
            //Obtendo dados 
            ResultSet dados = relatoriosDao.SelecionarPorIdObjeto(getIdObjeto());
            
            try{
                while (dados.next()) {                    
                    tbl.addCell(dados.getString("DescricaoAmbiente"));
                    tbl.addCell(dados.getString("DescricaoObjeto"));
                    tbl.addCell(dados.getString("DescricaoMaterial"));
                    tbl.addCell(Float.toString(dados.getFloat("CustoTotal")));
                    tbl.addCell(Float.toString(dados.getFloat("CustoMetro2")));                    
                }
            
            } catch (SQLException ex) {
                Logger.getLogger(TabelaBase.class.getName()).log(Level.SEVERE, null, ex);
            }

            doc.add(tbl);

            doc.close();

        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao gerar relatório " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
}
